{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bitbucket \u2192 GitHub Migration Documentation","text":"<p>Welcome! This documentation explains how to migrate a Bitbucket Cloud repository to GitHub, using the provided Python migration tools. It\u2019s designed for repository administrators, DevOps engineers, and technical leads who need a reliable, repeatable migration process.</p>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"Step Task Estimated Time Reference 1 Run Audit 15\u201330 min Generates audit report and config 2 Push Git Mirror 15\u201330 min Copies commits, branches, tags 3 Dry Run Migration 15 min Validate configuration 4 Run Full Migration 1\u20133 h Migrates issues and PRs 5 Upload Attachments 30\u201390 min Manual step due to API limits 6 Verify &amp; Clean Up 30\u201360 min Validate and finalize repo"},{"location":"#documentation-structure","title":"\ud83d\udcc2 Documentation Structure","text":"Section Purpose Migration Guide Main step-by-step workflow Attachment Upload Guide Manual process for migrating attachments Troubleshooting Fix common API or config errors Reference JSON config, API tokens, user mapping Checklists Ready-to-use task lists Glossary Key terms used throughout the docs"},{"location":"#who-should-use-this-guide","title":"\ud83e\udded Who Should Use This Guide","text":"<ul> <li>Migration administrators moving Bitbucket Cloud repos to GitHub.</li> <li>Developers verifying migrated data (issues, PRs, attachments).</li> <li>Team leads planning the cutover and post-migration cleanup.</li> </ul> <p>If you only need to upload attachments after migration, skip directly to \u27a1\ufe0f Attachment Upload Guide.</p>"},{"location":"#requirements","title":"\ud83d\udee0\ufe0f Requirements","text":"<ul> <li>Python 3.7+</li> <li>Git 2.x+</li> <li>Bitbucket Cloud account (API token)</li> <li>GitHub account (Personal Access Token with <code>repo</code> scope)</li> </ul> <p>See detailed setup in Prerequisites.</p>"},{"location":"#resources","title":"\ud83d\udccb Resources","text":"<ul> <li>GitHub REST API v3</li> <li>Bitbucket Cloud REST API 2.0</li> <li>GitHub Import Service Docs</li> </ul>"},{"location":"#estimated-migration-duration","title":"\ud83d\udd50 Estimated Migration Duration","text":"Repository Size Typical Duration Notes Small (\u226450 issues) 1\u20132 hours Minimal verification Medium (100\u2013300 issues) 3\u20135 hours Includes manual upload Large (500+ issues) 6\u20139 hours May require chunked migration <p>Next step \u2192 Start the Migration Guide</p>"},{"location":"attachment_upload/","title":"Post-Migration Attachment Upload Guide","text":"<p>After running the migration script, attachments from Bitbucket are downloaded to the local folder <code>attachments_temp/</code>. GitHub\u2019s API doesn\u2019t allow automatic upload of these files, so they must be added manually.</p> <p>This guide explains how to locate, upload, and verify migrated attachments.</p>"},{"location":"attachment_upload/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<pre><code>POST-MIGRATION: Attachment Handling\n===================================\n\n8 attachments were downloaded to: attachments_temp/\n\nTo upload attachments to GitHub issues:\n1. Navigate to the issue on GitHub\n2. Click the comment box\n3. Drag and drop the file from attachments_temp/\n4. The file will be uploaded and embedded\n</code></pre>"},{"location":"attachment_upload/#step-by-step-instructions","title":"\ud83d\udd27 Step-by-Step Instructions","text":""},{"location":"attachment_upload/#1-locate-the-attachment-files","title":"1. Locate the Attachment Files","text":"<pre><code>cd attachments_temp/\nls -lh\n</code></pre> <p>Example output:</p> <pre><code>screenshot.png          2.3M\ndesign-mockup.pdf       5.1M\nerror-log.txt           150K\n</code></pre>"},{"location":"attachment_upload/#2-identify-the-target-issue-or-pr","title":"2. Identify the Target Issue or PR","text":"<p>Check your GitHub repository for comments added by the migration script. Each issue with attachments includes:</p> <pre><code>\ud83d\udcce **Attachment from Bitbucket**: `screenshot.png` (2.3 MB)\n\n*Note: This file was attached to the original Bitbucket issue.*\n</code></pre> <p>You can also search your migration logs:</p> <pre><code>grep \"Attachment from Bitbucket\" migration.log\n</code></pre>"},{"location":"attachment_upload/#3-upload-the-file","title":"3. Upload the File","text":""},{"location":"attachment_upload/#option-a-add-a-new-comment-with-the-file","title":"Option A \u2014 Add a New Comment with the File","text":"<ol> <li>Open the issue on GitHub</li> <li>Scroll to the comment box</li> <li>Drag and drop the file into the box</li> <li>Wait for the upload to finish</li> <li>Add text if desired and click Comment</li> </ol>"},{"location":"attachment_upload/#option-b-edit-the-existing-attachment-comment","title":"Option B \u2014 Edit the Existing Attachment Comment","text":"<ol> <li>Find the comment starting with \u201c\ud83d\udcce Attachment from Bitbucket\u201d</li> <li>Click ... \u2192 Edit</li> <li>Drag the file into the editor</li> <li>Update text if needed</li> <li>Click Update comment</li> </ol>"},{"location":"attachment_upload/#4-verify-upload","title":"4. Verify Upload","text":"<ul> <li>Images preview inline</li> <li>PDFs and other files appear as downloadable links</li> <li>The file is now stored permanently on GitHub</li> </ul>"},{"location":"attachment_upload/#bulk-upload-with-github-cli","title":"\ud83d\udee0\ufe0f Bulk Upload with GitHub CLI","text":"<p>If you have many attachments, you can automate uploads.</p> <pre><code># Install GitHub CLI\nbrew install gh  # macOS\n# or download from https://cli.github.com\n\n# Authenticate\ngh auth login\n\n# Bulk upload script\ncd attachments_temp\nwhile IFS=',' read -r file issue_num; do\n  echo \"Uploading $file to issue #$issue_num\"\n  gh issue comment \"$issue_num\" \\\n    --repo OWNER/REPO \\\n    --body \"**Attachment:** $file\" \\\n    --attach \"$file\"\n  sleep 2\ndone &lt; attachment_mapping.csv\n</code></pre> <p>The file <code>attachment_mapping.csv</code> should list each file and its associated issue number.</p>"},{"location":"attachment_upload/#prioritization","title":"\ud83d\udcc8 Prioritization","text":"Priority Typical Files Action Critical Screenshots, design mockups, key documents Upload first Important Logs, configuration templates Upload within 2 weeks Optional Old screenshots, test data Upload if time permits Skip Temporary or obsolete files No action"},{"location":"attachment_upload/#tracking-upload-progress","title":"\ud83d\udcc4 Tracking Upload Progress","text":"<p>Create <code>attachment-status.md</code> to track progress:</p> <pre><code># Attachment Upload Status\n\n## Summary\n- Total: 8\n- Uploaded: 3\n- Pending: 5\n- Skipped: 0\n\n### Critical\n- [x] #5 screenshot.png (2.3 MB)\n- [ ] #12 design-mockup.pdf (5.1 MB)\n\n### Important\n- [ ] #23 error-log.txt (150 KB)\n</code></pre>"},{"location":"attachment_upload/#tips-best-practices","title":"\ud83d\udd27 Tips &amp; Best Practices","text":"<ul> <li>Preview before upload: <code>open attachments_temp/filename.png</code></li> <li>Rename confusing files: <code>mv \"Screen Shot 2024-01-15.png\" issue-5-login-error.png</code></li> <li>Check file size: GitHub web upload limit is 25 MB. For larger files, use Git LFS or external hosting.</li> <li>Backup before deleting: Keep <code>attachments_temp/</code> for 30 days after migration.</li> </ul>"},{"location":"attachment_upload/#cleanup-and-backup","title":"\ud83d\udd27 Cleanup and Backup","text":"<p>After verifying uploads:</p> <pre><code>cd ..\ntar -czf migration_attachments_$(date +%Y%m%d).tar.gz attachments_temp/\nmv migration_attachments_*.tar.gz ~/backups/\nrm -rf attachments_temp/\n</code></pre> <p>Keep the backup archive and mapping files (<code>migration_mapping.json</code>, <code>audit_report.md</code>) for future reference.</p>"},{"location":"attachment_upload/#team-communication-template","title":"\ud83d\udce3 Team Communication Template","text":"<pre><code>Subject: Action Required \u2013 Upload Attachments After Migration\n\nHi Team,\n\nThe migration to GitHub is complete! Please upload attachments from `attachments_temp/` to their corresponding GitHub issues.\n\n**Priority:**\n- Critical: This week\n- Important: Within 2 weeks\n- Optional: As time permits\n\nSteps:\n1. Open the target issue on GitHub\n2. Drag the file into a new or existing comment\n3. Check it displays correctly\n\nThanks for helping complete the migration.\n</code></pre>"},{"location":"attachment_upload/#success-criteria","title":"\u2705 Success Criteria","text":"<ul> <li>All critical attachments uploaded within 1 week</li> <li>Important attachments uploaded within 2 weeks</li> <li>Backup created and verified</li> <li>Team tracking document updated</li> </ul>"},{"location":"migration_guide/","title":"Bitbucket \u2192 GitHub Migration Guide","text":"<p>Version: 2.0\u2003\u2003Last Updated: 2025-10-18</p>"},{"location":"migration_guide/#overview","title":"\ud83e\udd29 Overview","text":"<p>This guide explains how to migrate a Bitbucket Cloud repository to GitHub, preserving:</p> <ul> <li>Git history (branches, tags, commits)</li> <li>Issues, pull requests, and comments</li> <li>Attachments (manual upload required)</li> <li>Author and timestamp metadata (as text)</li> </ul>"},{"location":"migration_guide/#migration-phases","title":"\ud83e\uddf1 Migration Phases","text":"<pre><code>flowchart TD\nA[1. Audit Bitbucket Repo] --&gt; B[2. Push Git Mirror]\nB --&gt; C[3. Dry Run Migration]\nC --&gt; D[4. Run Full Migration]\nD --&gt; E[5. Upload Attachments]\nE --&gt; F[6. Verify &amp; Clean Up]</code></pre> Phase Purpose Output 1. Audit Collect metadata &amp; create config <code>audit_report.md</code>, <code>migration_config.json</code> 2. Git Mirror Copy commits, branches, tags GitHub repo populated 3. Dry Run Validate config &amp; API access Console logs 4. Full Migration Migrate issues, PRs, comments <code>migration_mapping.json</code> 5. Attachments Upload manually GitHub comments + uploaded files 6. Verification Compare counts, finalize Checklist complete"},{"location":"migration_guide/#prerequisites","title":"\ud83d\udee0\ufe0f Prerequisites","text":""},{"location":"migration_guide/#required-tools","title":"Required Tools","text":"<ul> <li>Python 3.7+</li> <li>Git 2.x+</li> <li><code>pip install requests</code></li> </ul>"},{"location":"migration_guide/#required-accounts-tokens","title":"Required Accounts &amp; Tokens","text":"<ul> <li>Bitbucket Cloud API Token (read access to repos, issues, PRs)</li> <li>GitHub Personal Access Token (PAT) with <code>repo</code> scope   \u2192 Create PAT</li> </ul>"},{"location":"migration_guide/#local-setup","title":"Local Setup","text":"<pre><code>git --version\npython3 --version\npip install requests\n</code></pre>"},{"location":"migration_guide/#step-by-step-migration","title":"\u2699\ufe0f Step-by-Step Migration","text":""},{"location":"migration_guide/#step-1-run-audit","title":"Step 1 \u2014 Run Audit","text":"<p>Generates the initial configuration and user mapping.</p> <pre><code>python audit_bitbucket.py \\\n  --workspace WORKSPACE \\\n  --repo REPO \\\n  --email YOU@DOMAIN \\\n  --generate-config \\\n  --gh-owner GITHUB_USER \\\n  --gh-repo REPO\n</code></pre> <p>Outputs</p> <ul> <li><code>audit_report.md</code> \u2013 summary of repo data</li> <li><code>migration_config.json</code> \u2013 template for migration</li> <li><code>user_mapping_template.txt</code> \u2013 list of contributors</li> </ul> <p>Next: Edit the config file to map Bitbucket users to GitHub accounts. See User Mapping Reference.</p>"},{"location":"migration_guide/#step-2-prepare-github-repository","title":"Step 2 \u2014 Prepare GitHub Repository","text":"<ol> <li>Create an empty repository on GitHub.    Do not add a README or license.</li> <li>Keep it private until migration is complete.</li> </ol>"},{"location":"migration_guide/#step-3-migrate-git-history","title":"Step 3 \u2014 Migrate Git History","text":"<pre><code>git clone --mirror https://bitbucket.org/WORKSPACE/REPO.git\ncd REPO.git\ngit remote add github https://github.com/OWNER/REPO.git\ngit push --mirror github\n</code></pre> <p>Verify:</p> <pre><code>git ls-remote github\n</code></pre>"},{"location":"migration_guide/#step-4-dry-run-migration","title":"Step 4 \u2014 Dry Run Migration","text":"<pre><code>python migrate_bitbucket_to_github.py \\\n  --config migration_config.json \\\n  --dry-run\n</code></pre> <p>Check for:</p> <ul> <li>Token authentication success</li> <li>Valid user mappings</li> <li>Correct issue/PR counts   If errors occur, see Troubleshooting.</li> </ul>"},{"location":"migration_guide/#step-5-run-full-migration","title":"Step 5 \u2014 Run Full Migration","text":"<pre><code>python migrate_bitbucket_to_github.py \\\n  --config migration_config.json\n</code></pre> <p>Outputs</p> <ul> <li>Migrated issues and PRs (open PRs remain PRs; closed PRs become issues)</li> <li>Downloaded attachments in <code>attachments_temp/</code></li> <li><code>migration_mapping.json</code> for ID cross-reference</li> </ul> <p>Migration typically takes 0.5 min per issue/PR due to API limits.</p>"},{"location":"migration_guide/#step-6-upload-attachments","title":"Step 6 \u2014 Upload Attachments","text":"<p>Attachments are downloaded locally because GitHub\u2019s API doesn\u2019t support direct upload.</p> <p>Go to \u27a1\ufe0f Attachment Upload Guide for detailed steps.</p>"},{"location":"migration_guide/#step-7-verify-and-clean-up","title":"Step 7 \u2014 Verify and Clean Up","text":"<p>Use the Verification Checklist to confirm:</p> <ul> <li>Issue/PR counts match audit report</li> <li>User mentions and labels correct</li> <li>Attachments uploaded</li> <li>Repository settings configured</li> </ul> <p>Then:</p> <ul> <li>Update README and branch protections</li> <li>Archive the Bitbucket repository (optional)</li> </ul>"},{"location":"migration_guide/#workarounds-summary","title":"\ud83d\udddf\ufe0f Workarounds Summary","text":"Limitation Workaround Missing original timestamps Included as text in description/comments Users without GitHub accounts Mentioned in text, not assigned Closed PRs (deleted branches) Migrated as issues with metadata Attachments Manual upload via Attachment Guide Rate limiting Script auto-throttles; rerun if interrupted"},{"location":"migration_guide/#verification-checklist-mini","title":"\ud83e\uddea Verification Checklist (Mini)","text":"Task Done GitHub repo has all branches &amp; tags \u2611 Issue &amp; PR counts match audit \u2611 Spot-check migrated issue content \u2611 User mentions appear correctly \u2611 Attachments uploaded \u2611 Bitbucket repo archived or marked read-only \u2611 <p>See the full Post-Migration Checklist.</p>"},{"location":"migration_guide/#troubleshooting-highlights","title":"\ud83d\udd00 Troubleshooting Highlights","text":"Symptom Likely Cause Fix <code>401 Unauthorized</code> Token expired / wrong scopes Regenerate PAT or Bitbucket token <code>429 Too Many Requests</code> API rate limit Wait 1 h or rerun with delay \u201cBranch not found\u201d Deleted source branch PR migrated as issue Missing attachments Download failure Check <code>attachments_temp/</code> and re-run attachment step <p>Full list: Troubleshooting Guide.</p>"},{"location":"migration_guide/#references","title":"\ud83d\udcda References","text":"<ul> <li>Migration Config Reference</li> <li>User Mapping Guide</li> <li>API Token Setup</li> <li>Glossary</li> </ul>"},{"location":"migration_guide/#success-criteria","title":"\u2705 Success Criteria","text":"<ul> <li>All issues and PRs migrated (placeholders fill gaps)</li> <li>Git history intact</li> <li>Team can access new repo</li> <li>Bitbucket archived or marked read-only</li> </ul> <p>Next: Upload Attachments \u2192</p>"},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<p>This guide lists common problems you may encounter during the migration and their solutions.</p>"},{"location":"troubleshooting/#authentication-errors","title":"\ud83d\udd10 Authentication Errors","text":"Symptom Cause Fix <code>401 Unauthorized</code> Invalid or expired token Regenerate Bitbucket API token or GitHub PAT <code>403 Forbidden</code> Insufficient token scope Ensure GitHub PAT includes <code>repo</code> scope <code>404 Not Found</code> Wrong repository name or permissions Verify repo exists and user has admin access"},{"location":"troubleshooting/#rate-limiting","title":"\u23f1\ufe0f Rate Limiting","text":"Platform Limit Mitigation GitHub ~5000 API calls/hour Use <code>--dry-run</code> first; rerun later Bitbucket Dynamic throttling Increase delay between requests <p>If you repeatedly hit limits, edit the script:</p> <pre><code>rate_limit_sleep(2.0)  # increase delay between calls\n</code></pre>"},{"location":"troubleshooting/#missing-or-incomplete-data","title":"\ud83d\udcc4 Missing or Incomplete Data","text":"Issue Explanation Resolution Missing issues or PRs API error or token expired Re-run migration; check <code>migration_mapping_partial.json</code> User mentions not linked User not mapped Update <code>migration_config.json</code> user mapping Timestamps incorrect GitHub API limitation Confirm noted in description text"},{"location":"troubleshooting/#attachment-problems","title":"\ud83d\udee0\ufe0f Attachment Problems","text":"Symptom Cause Fix Missing files in <code>attachments_temp/</code> API timeout or permission issue Re-run migration with valid Bitbucket token File &gt;25 MB not uploaded Web UI limit Use Git LFS or external hosting (Google Drive, Dropbox) Uploaded to wrong issue Manual mismatch Delete comment and re-upload to correct issue"},{"location":"troubleshooting/#script-or-environment-issues","title":"\ud83d\udd27 Script or Environment Issues","text":"Error Resolution <code>ModuleNotFoundError: requests</code> Install dependency: <code>pip install requests</code> <code>fatal: repository not found</code> Check repository URL and permissions <code>OSError: [Errno 28] No space left on device</code> Free disk space or change temp folder"},{"location":"troubleshooting/#recovery-tips","title":"\ud83d\udd00 Recovery Tips","text":"<ol> <li>Always keep Bitbucket repo intact until verification is complete.</li> <li> <p>If the migration halts mid-process:</p> </li> <li> <p>Check the console output for the last migrated item.</p> </li> <li>Resume from the partial mapping file if available.</li> <li>Use the audit report (<code>audit_report.md</code>) to confirm what\u2019s missing.</li> </ol>"},{"location":"troubleshooting/#when-to-re-run-migration","title":"\ud83d\udd27 When to Re-run Migration","text":"<p>Re-run the migration script if:</p> <ul> <li>Major portion of issues or PRs missing.</li> <li>Authentication tokens were invalid during initial run.</li> <li>User mapping file was incomplete.</li> </ul> <p>To rerun safely:</p> <ol> <li>Delete the GitHub repository.</li> <li>Recreate it as empty.</li> <li>Run the migration again using corrected configuration.</li> </ol>"},{"location":"troubleshooting/#support-resources","title":"\ud83d\udd27 Support Resources","text":"<ul> <li>GitHub REST API Documentation</li> <li>Bitbucket Cloud API Documentation</li> <li>GitHub Support</li> <li>Atlassian Community</li> </ul>"},{"location":"troubleshooting/#checklist-before-asking-for-help","title":"\u2705 Checklist Before Asking for Help","text":"<ul> <li>[ ] Confirm both API tokens are active and scoped correctly</li> <li>[ ] Compare audit vs. migrated item counts</li> <li>[ ] Check <code>migration_mapping.json</code> for missing IDs</li> <li>[ ] Search console logs for <code>ERROR</code> or <code>429</code></li> <li>[ ] Verify no network or disk errors occurred</li> </ul> <p>If problems persist, open a support ticket with:</p> <ul> <li>Migration date and repo name</li> <li>Script version</li> <li>Last successful migration log line</li> </ul> <p>End of Troubleshooting Guide</p>"},{"location":"checklists/post_migration/","title":"Post-Migration Checklist","text":"<p>After verification, complete these steps to finalize the migration and decommission Bitbucket.</p>"},{"location":"checklists/post_migration/#attachment-upload","title":"\ud83d\udce6 Attachment Upload","text":"Task Status [ ] Critical attachments uploaded [ ] Important attachments uploaded [ ] Optional attachments reviewed or skipped [ ] Upload progress tracked in <code>attachment-status.md</code>"},{"location":"checklists/post_migration/#repository-finalization","title":"\ud83e\uddfe Repository Finalization","text":"Task Status [ ] README updated with new links [ ] Issue templates migrated [ ] Wiki content imported (if applicable) [ ] Repository description updated [ ] GitHub Actions or CI/CD configured"},{"location":"checklists/post_migration/#team-communication","title":"\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1 Team Communication","text":"Task Status [ ] Migration completion email sent [ ] Developers added as collaborators [ ] Team permissions reviewed [ ] External integrations tested"},{"location":"checklists/post_migration/#bitbucket-decommissioning","title":"\ud83d\uddc4\ufe0f Bitbucket Decommissioning","text":"Task Status [ ] Bitbucket repo set to read-only [ ] Link to GitHub repo added to Bitbucket README [ ] Bitbucket repo archived or deleted after retention period"},{"location":"checklists/post_migration/#backup-documentation","title":"\ud83e\uddf0 Backup &amp; Documentation","text":"Task Status [ ] Backup archive of <code>attachments_temp/</code> created [ ] Migration logs archived [ ] Final audit and mapping files stored"},{"location":"checklists/post_migration/#project-closure","title":"\u2705 Project Closure","text":"Task Status [ ] All checklists completed [ ] Sign-off from project owner [ ] Bitbucket decommissioned"},{"location":"checklists/pre_migration/","title":"Pre-Migration Checklist","text":"<p>Use this checklist before starting the Bitbucket \u2192 GitHub migration. Completing these steps ensures a smooth and reliable process.</p>"},{"location":"checklists/pre_migration/#setup-verification","title":"\ud83d\udd27 Setup Verification","text":"Task Status [ ] Python 3.7+ installed [ ] Git 2.x+ installed [ ] <code>requests</code> package installed (<code>pip install requests</code>) [ ] Access to Bitbucket Cloud repo confirmed [ ] Access to GitHub destination repo confirmed [ ] Sufficient disk space (2\u00d7 repo size)"},{"location":"checklists/pre_migration/#authentication","title":"\ud83d\udd11 Authentication","text":"Task Status [ ] Bitbucket API token created [ ] GitHub PAT created with <code>repo</code> scope [ ] Both tokens tested with <code>curl</code> [ ] Tokens stored securely (not committed to Git)"},{"location":"checklists/pre_migration/#repository-preparation","title":"\ud83d\uddc2\ufe0f Repository Preparation","text":"Task Status [ ] Bitbucket repo name noted [ ] GitHub repo created and empty [ ] Repo visibility (private/public) decided [ ] Branch protection rules documented"},{"location":"checklists/pre_migration/#user-mapping","title":"\ud83d\udc65 User Mapping","text":"Task Status [ ] Audit script run with <code>--generate-config</code> [ ] <code>user_mapping_template.txt</code> reviewed [ ] All active users mapped to GitHub usernames [ ] Deleted users mapped to <code>null</code>"},{"location":"checklists/pre_migration/#audit-configuration","title":"\ud83e\uddfe Audit &amp; Configuration","text":"Task Status [ ] <code>audit_report.md</code> reviewed [ ] <code>migration_config.json</code> validated (no syntax errors) [ ] Issue and PR counts recorded [ ] Attachments noted (count, total size)"},{"location":"checklists/pre_migration/#ready-to-proceed","title":"\u2705 Ready to Proceed","text":"Task Status [ ] Backup of Bitbucket repo created [ ] All above steps complete [ ] Team notified of migration schedule"},{"location":"checklists/verification/","title":"Migration Verification Checklist","text":"<p>Use this checklist immediately after running the migration script to confirm data integrity.</p>"},{"location":"checklists/verification/#git-verification","title":"\ud83e\udde9 Git Verification","text":"Task Status [ ] All branches migrated [ ] All tags present [ ] Commit history identical to Bitbucket [ ] Default branch set correctly"},{"location":"checklists/verification/#issues-prs","title":"\ud83e\uddfe Issues &amp; PRs","text":"Task Status [ ] Issue count matches audit report [ ] PR count matches audit report [ ] Closed PRs migrated as issues (where needed) [ ] Labels and milestones correct [ ] Issue numbers sequential"},{"location":"checklists/verification/#comments-mentions","title":"\ud83d\udde8\ufe0f Comments &amp; Mentions","text":"Task Status [ ] All comments migrated [ ] User mentions linked correctly [ ] Deleted users marked as <code>(no GitHub account)</code> [ ] Timestamps present in comment text"},{"location":"checklists/verification/#attachments","title":"\ud83d\udcce Attachments","text":"Task Status [ ] All attachments downloaded to <code>attachments_temp/</code> [ ] Attachment references visible in GitHub comments [ ] Uploads scheduled via Attachment Guide"},{"location":"checklists/verification/#data-validation","title":"\ud83d\udd0d Data Validation","text":"Task Status [ ] Spot-check sample issues for accuracy [ ] Spot-check sample PRs for accuracy [ ] Audit vs. migrated item counts match"},{"location":"checklists/verification/#repo-settings","title":"\u2699\ufe0f Repo Settings","text":"Task Status [ ] Default branch configured [ ] Branch protections added [ ] CI/CD workflows updated [ ] Team permissions reviewed"},{"location":"checklists/verification/#verification-complete","title":"\u2705 Verification Complete","text":"Task Status [ ] All data validated [ ] Summary report generated [ ] Team notified of verification results"},{"location":"reference/api_tokens/","title":"API Tokens Setup Guide","text":"<p>This page explains how to generate and manage the required API tokens for Bitbucket Cloud and GitHub.</p>"},{"location":"reference/api_tokens/#bitbucket-cloud-api-token","title":"\ud83d\udd11 Bitbucket Cloud API Token","text":"<ol> <li>Go to Atlassian Account Settings \u2192 Security \u2192 Create and manage API tokens.</li> <li>Click Create API token.</li> <li>Name it: <code>Migration Tool</code>.</li> <li>Choose Bitbucket as the app.</li> <li>Set Full access (or minimally: read repos, issues, PRs).</li> <li>Copy the token immediately \u2013 it won\u2019t be shown again.</li> </ol> <p>Example usage in config:</p> <pre><code>\"bitbucket\": {\n  \"email\": \"you@example.com\",\n  \"token\": \"ATAT1234...\"\n}\n</code></pre>"},{"location":"reference/api_tokens/#github-personal-access-token-pat","title":"\ud83d\udd11 GitHub Personal Access Token (PAT)","text":"<ol> <li>Go to GitHub Settings \u2192 Developer settings \u2192 Personal access tokens (classic).</li> <li>Click Generate new token (classic).</li> <li>Name it <code>Bitbucket Migration</code>.</li> <li>Enable scope <code>repo</code> (full control of private repos).</li> <li>Click Generate token and copy it.</li> </ol> <p>Example usage in config:</p> <pre><code>\"github\": {\n  \"owner\": \"my-org\",\n  \"repo\": \"my-repo\",\n  \"token\": \"ghp_abcd123...\"\n}\n</code></pre>"},{"location":"reference/api_tokens/#token-security-best-practices","title":"\ud83d\udd27 Token Security Best Practices","text":"<ul> <li>Never commit tokens to Git.</li> <li>Store them in environment variables or a <code>.env</code> file.</li> <li>Rotate tokens after migration.</li> <li>Use read-only tokens where possible.</li> <li>Delete unused tokens once verified.</li> </ul>"},{"location":"reference/api_tokens/#verification","title":"\ud83d\udca1 Verification","text":"<p>Test your tokens before running the migration:</p> <pre><code># Test Bitbucket token\ncurl -u you@example.com:ATAT1234... https://api.bitbucket.org/2.0/user\n\n# Test GitHub PAT\ntoken=ghp_abcd123...\ncurl -H \"Authorization: token $token\" https://api.github.com/user\n</code></pre> <p>If both commands return your user info, the tokens are valid.</p>"},{"location":"reference/glossary/","title":"Glossary","text":"Term Definition API Token Authentication credential used for accessing Bitbucket or GitHub APIs. App Password Legacy Bitbucket auth method, deprecated as of Sept 2025. Audit Report Markdown summary file produced during <code>audit_bitbucket.py</code> run. Dry Run Mode that simulates migration without creating data on GitHub. Git Mirror Push Exact copy of all branches, tags, and commits to new remote. Placeholder Issue Empty issue used to preserve issue numbering sequence. PR (Pull Request) Proposed code change reviewed before merging. PAT (Personal Access Token) GitHub token that authenticates API requests. Rate Limiting Restriction on the number of API requests per time window. User Mapping JSON table linking Bitbucket usernames to GitHub equivalents. Migration Mapping JSON output showing Bitbucket \u2192 GitHub issue/PR correspondence. LFS (Large File Storage) Git extension for storing large binary files outside Git history. Attachment Comment GitHub issue comment noting migrated Bitbucket attachment. Verification Checklist Post-migration validation list ensuring data completeness."},{"location":"reference/migration_config/","title":"Migration Configuration Reference","text":"<p>This file defines how the migration tool connects to Bitbucket and GitHub, and how user identities are mapped.</p>"},{"location":"reference/migration_config/#file-overview","title":"\ud83d\udd27 File Overview","text":"<p><code>migration_config.json</code> is generated automatically when you run the audit script with <code>--generate-config</code>. You can edit it before running the actual migration.</p> <pre><code>{\n  \"bitbucket\": {\n    \"workspace\": \"myworkspace\",\n    \"repo\": \"myrepo\",\n    \"email\": \"you@example.com\",\n    \"token\": \"ATAT...\"\n  },\n  \"github\": {\n    \"owner\": \"your-github-username\",\n    \"repo\": \"myrepo\",\n    \"token\": \"ghp_...\"\n  },\n  \"user_mapping\": {\n    \"Alice Smith\": \"alice-smith-gh\",\n    \"Bob Jones\": \"bjones\",\n    \"Unknown (deleted user)\": null\n  }\n}\n</code></pre>"},{"location":"reference/migration_config/#key-fields","title":"\ud83d\udd0a Key Fields","text":"Section Key Description <code>bitbucket.workspace</code> Workspace name Bitbucket Cloud workspace containing the repo <code>bitbucket.repo</code> Repository name Name of the Bitbucket repo <code>bitbucket.email</code> Your Atlassian email Required for API authentication <code>bitbucket.token</code> API token Use full-access token; see API Tokens <code>github.owner</code> GitHub user/org name Destination owner for repository <code>github.repo</code> Repository name Destination repo name (must exist and be empty) <code>github.token</code> GitHub PAT Must include <code>repo</code> scope <code>user_mapping</code> Mapping table Links Bitbucket display names to GitHub usernames"},{"location":"reference/migration_config/#user-mapping-rules","title":"\ud83d\udc65 User Mapping Rules","text":"<ul> <li>If a Bitbucket user does not have a GitHub account, map to <code>null</code>.</li> <li>Deleted users can be represented as <code>\"Unknown (deleted user)\": null</code>.</li> <li>Use GitHub usernames, not emails.</li> <li>You can edit <code>user_mapping</code> manually or import from <code>user_mapping_template.txt</code>.</li> </ul> <p>Example:</p> <pre><code>\"user_mapping\": {\n  \"External Consultant\": null,\n  \"Former Employee\": null,\n  \"Alice\": \"alice-gh\",\n  \"Bob\": \"bob-dev\"\n}\n</code></pre>"},{"location":"reference/migration_config/#tips","title":"\ud83d\udca1 Tips","text":"<ul> <li>Use the audit report (<code>audit_report.md</code>) to find active users.</li> <li>Focus mapping on high-activity users.</li> <li>If unsure, set to <code>null</code> \u2014 the tool will still credit them by name in issue text.</li> </ul>"},{"location":"reference/migration_config/#validation-checklist","title":"\ud83d\udd27 Validation Checklist","text":"<ul> <li>[ ] All tokens filled in (Bitbucket and GitHub)</li> <li>[ ] Repository names correct</li> <li>[ ] <code>user_mapping</code> includes all active contributors</li> <li>[ ] No trailing commas or JSON syntax errors</li> </ul>"},{"location":"reference/user_mapping/","title":"User Mapping Reference","text":"<p>User mapping ensures migrated issues, pull requests, and comments are correctly attributed to GitHub users.</p>"},{"location":"reference/user_mapping/#how-it-works","title":"\ud83d\udc64 How It Works","text":"<p>Bitbucket users are identified by display name; GitHub identifies by username. The migration tool uses the mapping in <code>migration_config.json</code> to link them.</p> <p>If a user cannot be mapped:</p> <ul> <li>Their name appears in bold in issue text (e.g., <code>**John Doe** (no GitHub account)</code>).</li> <li>They are not assigned to issues.</li> </ul>"},{"location":"reference/user_mapping/#example-mapping","title":"\ud83d\udd27 Example Mapping","text":"<pre><code>\"user_mapping\": {\n  \"Alice Smith\": \"alice-smith-gh\",\n  \"Bob Jones\": \"bobj\",\n  \"Charlie Brown\": null,\n  \"Unknown (deleted user)\": null\n}\n</code></pre>"},{"location":"reference/user_mapping/#creating-the-mapping","title":"\ud83d\udee0\ufe0f Creating the Mapping","text":"<ol> <li>Run the audit script: <code>python audit_bitbucket.py --generate-config</code>.</li> <li>Review <code>user_mapping_template.txt</code> for all users found in issues and PRs.</li> <li>Fill in GitHub usernames for active contributors.</li> <li>Leave inactive or deleted users as <code>null</code>.</li> </ol>"},{"location":"reference/user_mapping/#tips-for-accurate-mapping","title":"\ud83d\udca1 Tips for Accurate Mapping","text":"<ul> <li>Use GitHub usernames, not display names.</li> <li>Confirm active users\u2019 GitHub handles before migration.</li> <li>Prioritize frequent contributors first.</li> <li>Keep the mapping consistent across multiple repos if migrating several.</li> </ul>"},{"location":"reference/user_mapping/#verification","title":"\ud83d\udd27 Verification","text":"<p>After migration, check a few issues or PRs:</p> <ul> <li>Comment text includes correct GitHub mention.</li> <li>Usernames resolve (clickable links).</li> <li>Unmapped users are correctly marked as <code>no GitHub account</code>.</li> </ul> <p>If needed, you can re-run the migration after updating the mapping.</p>"}]}